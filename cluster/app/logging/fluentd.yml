apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: logging
  labels:
    k8s-app: fluentd
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd
        kubernetes.io/cluster-service: "true"
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key": "node.alpha.kubernetes.io/ismaster", "effect": "NoSchedule"}]'
    spec:
      containers:
      - name: fluentd
        image: {{conf['fluentd']['images'][0]}}
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 400Mi
        env:
        - name: ES_HOST
          valueFrom:
            configMapKeyRef:
              name: logging-config
              key: es-host
        - name: ES_PORT
          valueFrom:
            configMapKeyRef:
              name: logging-config
              key: es-port
        - name: TARGET_ENV
          value: {{conf['fluentd']['target_env']}}
        - name: BROKERS_LIST
          value: {{conf['egov-config']['kafka-brokers']}}
        - name: TOPIC_NAME
          value: egov-{{conf['fluentd']['target_env']}}-docker-logs
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: minikubedockerlogs
          mountPath: /mnt/sda1/var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
{% if conf['fluentd']['service_account']  %}
      serviceAccountName: fluentd
      serviceAccount: fluentd
{% endif %}
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: minikubedockerlogs
        hostPath:
          path: /mnt/sda1/var/lib/docker/containers
