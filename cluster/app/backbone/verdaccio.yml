{% for index in range(conf['verdaccio']['replicas']) %}
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: verdaccio-data-verdaccio-{{index}}
    labels:
      app: verdaccio
  spec:
    capacity:
      storage: 50Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Recycle
    claimRef:
        namespace: backbone
        name: verdaccio-data-verdaccio-{{index}}
    awsElasticBlockStore:
      volumeID: {{conf['verdaccio']['ebs-volumes'][index]}}
      fsType: ext4
---
{% endfor %}

apiVersion: v1
kind: Service
metadata:
  name: verdaccio
  namespace: backbone
  labels:
    app: verdaccio
spec:
  ports:
  - port: 4873
    targetPort: 4873
  selector:
    app: verdaccio
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: verdaccio
  namespace: backbone
spec:
  replicas: {{conf['verdaccio']['replicas']}}
  serviceName: "verdaccio"
  template:
    metadata:
      labels:
        app: verdaccio
    spec:
      containers:
      - name: verdaccio
        image: {{conf['verdaccio']['images'][0]}}
        volumeMounts:
        - name: verdaccio-data
          mountPath: /verdaccio/storage
        - name: verdaccio-htpassword
          mountPath: "/verdaccio/conf/htpasswd"
          readOnly: true
        ports:
        - containerPort: 4873
      securityContext:
        fsGroup: 1000
      volumes:
      - name: verdaccio-htpassword
        secret:
          secretName: verdaccio-htpassword
  volumeClaimTemplates:
  - metadata:
      name: verdaccio-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
