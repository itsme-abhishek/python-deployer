apiVersion: v1
kind: Service
metadata:
  name: tl-workflow
  namespace: egov
  labels:
    app: tl-workflow
    group: tradelicense
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tl-workflow
    group: tradelicense
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tl-workflow
  namespace: egov
spec:
  replicas: {{conf['tl-workflow']['replicas']}}
  template:
    metadata:
      labels:
        app: tl-workflow
        group: tradelicense
    spec:
      containers:
      - name: tl-workflow
        image: {{conf['tl-workflow']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: tl-workflow
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: EGOV_SERVICES_TL_SERVICES_TRADELICENSE_VALIDATED_TOPIC
          value: tradelicense-validated
        - name: EGOV_SERVICES_EGOV_LOCATION_HOSTNAME
          value: "{{conf['egov-service-host']['egov-location']}}"
        - name: EGOV_SERVICES_TL_SERVICES_HOSTNAME
          value: "{{conf['egov-service-host']['tl-services']}}"
        - name: EGOV_SERVICES_COMMON_WORKFLOW_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-workflows']}}"
        - name: EGOV_SERVICES_COMMON_MASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_SERVICES_HR_MASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['hr-masters']}}"
        - name: EGOV_SERVICES_HR_EMPLOYEE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: EGOV_SERVICES_TL_SERVICES_TRADELICENSE_VALIDATED_GROUP
          value: tradelicense-validated.group
        - name: EGOV_SERVICES_TL_SERVICES_TRADELICENSE_VALIDATED_ID
          value: tradelicense-validated.id
        - name: EGOV_SERVICES_TL_SERVICES_TRADELICENSE_WORKFLOW_POPULATED_TOPIC
          value: tradelicense-workflow-populated
        - name: EGOV_SERVICES_TL_SERVICES_TRADELICENSE_WORKFLOW_POPULATED_KEY
          value: tradelicense-workflow-populated-key
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['tl-workflow']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['tl-workflow']['memory_limits'] or "256Mi"}}"
