apiVersion: v1
kind: Service
metadata:
  name: tl-services
  namespace: egov
  labels:
    app: tl-services
    group: tradelicense
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tl-services
    group: tradelicense
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tl-services
  namespace: egov
spec:
  replicas: {{conf['tl-services']['replicas']}}
  template:
    metadata:
      labels:
        app: tl-services
        group: tradelicense
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "tl-services-db-migration",
            "image": "{{conf["tl-services"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "tl_services_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: tl-services
        image: {{conf['tl-services']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_CONTEXTPATH
          value: /tl-services
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: EGOV_SERVICES_TL_MASTERS_V1_HOSTNAME
          value: "{{conf['egov-service-host']['tl-masters']}}"
        - name: EGOV_SERVICES_EGOV_LOCATION_HOSTNAME
          value: "{{conf['egov-service-host']['egov-location']}}"
        - name: EGOV_SERVICES_EGF_MASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['egf-masters']}}"
        - name: EGOV_SERVICES_TL_INDEXER_V1_HOSTNAME
          value: "{{conf['egov-service-host']['tl-indexer']}}"
        - name: EGOV_SERVICES_PT_PROPERTY_HOSTNAME
          value: "{{conf['egov-service-host']['pt-property']}}"
        - name: EGOV_SERVICES_ID_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_SERVICES_TENANT_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['tenant']}}"
        - name: EGOV_SERVICES_EGOV_USER_HOSTNAME
          value: http://egov-user:8080/user
        - name: EGOV_SERVICES_TL_SERVICES_CREATE_LEGACY_TRADELICENSE_VALIDATED
          value: create-legacy-tradelicense-validated
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: tl-services
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['tl-services']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: EGOV_SERVICES_BILLING_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['billing-service']}}"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['tl-services']['memory_limits'] or "256Mi"}}"
