apiVersion: v1
kind: Service
metadata:
  name: works-masters
  namespace: egov
  labels:
    app: works-masters
    group: works
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: works-masters
    group: works
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: works-masters
  namespace: egov
spec:
  replicas: {{conf['works-masters']['replicas']}}
  template:
    metadata:
      labels:
        app: works-masters
        group: works
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "works-masters-db-migration",
            "image": "{{conf["works-masters"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "works_masters_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: works-masters
        image: {{conf['works-masters']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: WORKS_MASTERS_HOST_URL
          value: "{{conf['egov-service-host']['works-masters']}}"
        - name: EGOV_SERVICES_EGOV_WORKS_ESTIMATE_HOSTNAME
          value: "{{conf['egov-service-host']['works-estimate']}}"
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: works-masters-group
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: EGOV_SERVICES_WORKS_MASTERS_SORRATE_CREATE_VALIDATED
          value: works-sorrate-create-validated
        - name: EGOV_SERVICES_WORKS_MASTERS_SORRATE_UPDATE_VALIDATED
          value: works-sorrate-update-validated
        - name: EGOV_SERVICES_EGOV_MDMS_HOSTNAME
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['works-masters']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['works-masters']['memory_limits'] or "256Mi"}}"
