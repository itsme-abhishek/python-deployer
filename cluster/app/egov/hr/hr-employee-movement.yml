apiVersion: v1
kind: Service
metadata:
  name: hr-employee-movement
  namespace: egov
  labels:
    app: hr-employee-movement
    group: hr
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: hr-employee-movement
    group: hr
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hr-employee-movement
  namespace: egov
spec:
  replicas: {{conf['hr-employee-movement']['replicas']}}
  template:
    metadata:
      labels:
        app: hr-employee-movement
        group: hr
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
        {% if conf["hr-employee-movement"]["env_specific_db_migration_image"] %}
          {
            "name": "hr-employee-movement-env-specific-db-migration",
            "image": "{{conf["hr-employee-movement"]["env_specific_db_migration_image"]}}",
            "command": ["sh", "-c", "cp -R /egov/db/migration/hr/hr-employee-movement/* /env_specific_db_migration/"],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "Always"
          },
        {% endif %}
          {
            "name": "hr-employee-movement-db-migration",
            "image": "{{conf["hr-employee-movement"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "hr_employee_movement_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: hr-employee-movement
        image: {{conf['hr-employee-movement']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: KAFKA_CONFIG_BOOTSTRAP_SERVER_CONFIG
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: EGOV_SERVICES_ESINDEXER_HOST
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: es-indexer-host
        - name: EGOV_SERVICES_COMMON_MASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_SERVICES_EGF_MASTERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egf-masters']}}"
        - name: EGOV_SERVICES_HR_EMPLOYEE_HOST
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: KAFKA_TOPICS_MOVEMENT_CREATE_NAME
          value: egov.movement-create
        - name: KAFKA_TOPICS_MOVEMENT_UPDATE_NAME
          value: egov.movement-update
        - name: KAFKA_CONSUMER_CONFIG_GROUP_ID
          value: hr-employee-movement-group
        - name: EGOV_SERVICES_COMMON_WORKFLOW_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-workflows']}}"
        - name: EGOV_SERVICES_HR_MASTERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-masters']}}"
        - name: EGOV_SERVICES_HR_MASTERS_SERVICE_HRSTATUSES_KEY
          value: EmployeeMovement
        - name: EGOV_SERVICES_USERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_SERVICES_EGOV_LOCATION_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-location']}}"
        - name: EGOV_SERVICES_HR_EMPLOYEE_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: EGOV_SERVICES_WORKFLOW_SERVICE_TRANSFER_BUSINESSKEY
          value: EmployeeTransfer
        - name: EGOV_SERVICES_WORKFLOW_SERVICE_PROMOTION_BUSINESSKEY
          value: EmployeePromotion
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['hr-employee-movement']['memory_limits'] or "256Mi"}}"
      volumes:
      - name: env-specific-db-migration
        emptyDir: {}
{% if conf['egov-docker-registry-secret'] %}
      imagePullSecrets:
      - name: regsecret
      - name: allvyregsecret
{% endif %}
