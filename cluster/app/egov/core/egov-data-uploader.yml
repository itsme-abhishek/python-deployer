apiVersion: v1
kind: Service
metadata:
  name: egov-data-uploader
  namespace: egov
  labels:
    app: egov-data-uploader
    group: core
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: egov-data-uploader
    group: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-data-uploader
  namespace: egov
spec:
  replicas: {{conf['egov-data-uploader']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-data-uploader
        group: core
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "egov-data-uploader-db-migration",
            "image": "{{conf["egov-data-uploader"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "egov-data-uploader_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: egov-data-uploader
        image: {{conf['egov-data-uploader']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SEARCH_YAML_PATH
          value: "https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/citizen-data-upload.yml"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['egov-data-uploader']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: SERVER_PORT
          value: "8080"
        - name: INTERNAL_FILE_FOLDER_PATH
          value: "/data/core/egov-data-uploader/src/main/resources/internal"
        - name: PROPERTY_MODULE_NAME
          value: "property-upload"
        - name: PROPERTY_HOST
          value: "{{conf['egov-service-host']['pt-services-v2']}}"
        - name: PROPERTY_CREATE
          value: "pt-services-v2/property/_create"
        - name: BUSINESS_MODULE_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"
        - name: FILESTORE_HOST
          value: "{{conf['egov-service-host']['egov-filestore']}}"
{% if conf['egov-data-uploader']['upload-assessment'] %}
        - name: UPLOAD_JSON_PATH
          value: "{{conf['egov-data-uploader']['upload-json-path']}}"
        - name: TEMPLATE_DOWNLOAD_PREFIX
          value: "{{conf['egov-data-uploader']['template-download-prefix']}}"
        - name: INTERNAL_FILE_FOLDER_PATH
          value: "{{conf['egov-data-uploader']['internal-file-folder-path']}}"
{% endif %}
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{conf['egov-data-uploader']['memory_limits'] or "256Mi"}}"