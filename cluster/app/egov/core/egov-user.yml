apiVersion: v1
kind: Service
metadata:
  name: egov-user
  namespace: egov
  labels:
    app: egov-user
    group: core
  annotations:
    prometheus.io/path: /user/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: egov-user
    group: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-user
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['egov-user']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-user
        group: core
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
        {% if conf["egov-user"]["env_specific_db_migration_image"] %}
          {
            "name": "egov-user-env-specific-db-migration",
            "image": "{{conf["egov-user"]["env_specific_db_migration_image"]}}",
            "command": ["sh", "-c", "cp -R /egov/db/migration/core/egov-user/* /env_specific_db_migration/"],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "Always"
          },
        {% endif %}
          {
            "name": "egov-user-db-migration",
            "image": "{{conf["egov-user"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "egov_user_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {% if conf["egov-user"]["flyway-locations"] %}
                {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-user", "key": "flyway-locations"}}}
              {% else %}
                {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
              {% endif %}
            ],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: egov-user
        image: {{conf['egov-user']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /user/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /user/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: FLYWAY_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
{% if conf['egov-config']['server-tomcat-max-threads'] %}
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"
{% endif %}          
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SERVER_PORT
          value: "8080"
        - name: SPRING_REDIS_HOST
          value: redis.backbone
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: EGOV_OTP_HOST
          value: "{{conf['egov-service-host']['egov-otp']}}"
        - name: EGOV_USER_HOST
          value: "http://localhost:8080"
        - name: EGOV_SERVICES_ACCESSCONTROL_HOST
          value: "{{conf['egov-service-host']['egov-accesscontrol']}}"
        - name: EGOV_FILESTORE_HOST
          value: "{{conf['egov-service-host']['egov-filestore']}}"
{% if conf['egov-config']['newrelic-enabled'] == "true" %}
        - name: NEWRELIC_ENABLED
          value: "true"
        - name: NEWRELIC_LICENSE_KEY
          value: {{conf['egov-config']['newrelic-license-key'] | decrypt}}
{% endif %}
{% if conf['egov-user']['otp-validation'] %}
        - name: OTP_VALIDATION_REGISTER_MANDATORY
          value: "{{conf['egov-user']['otp-validation']}}"
{% endif %}
{% if conf['egov-user']['citizen-otp-enabled'] %}
        - name: CITIZEN_LOGIN_PASSWORD_OTP_ENABLED
          value: "{{conf['egov-user']['citizen-otp-enabled']}}"
{% endif %}
{% if conf['egov-user']['employee-otp-enabled'] %}
        - name: EMPLOYEE_LOGIN_PASSWORD_OTP_ENABLED
          value: "{{conf['egov-user']['employee-otp-enabled']}}"
{% endif %}
{% if conf['egov-user']['access-token-validity'] %}
        - name: ACCESS_TOKEN_VALIDITY_IN_MINUTES
          value: "{{conf['egov-user']['access-token-validity']}}"
{% endif %}
{% if conf['egov-user']['refresh-token-validity'] %}
        - name: REFRESH_TOKEN_VALIDITY_IN_MINUTES
          value: "{{conf['egov-user']['refresh-token-validity']}}"
{% endif %}
{% if conf['egov-user']['default-password-expiry'] %}
        - name: DEFAULT_PASSWORD_EXPIRY_IN_DAYS
          value: "{{conf['egov-user']['default-password-expiry']}}"
{% endif %}
{% if conf['egov-user']['mobile-number-validation'] %}
        - name: MOBILE_NUMBER_VALIDATION_WORKAROUND_ENABLED
          value: "{{conf['egov-user']['mobile-number-validation']}}"
{% endif %}
{% if conf['egov-user']['roles-state-level'] %}
        - name: ROLES_STATE_LEVEL_ENABLED
          value: "{{conf['egov-user']['roles-state-level']}}"
{% endif %}
{% if conf['egov-user']['citizen-registration-withlogin'] %}
        - name: CITIZEN_REGISTRATION_WITHLOGIN_ENABLED
          value: "{{conf['egov-user']['citizen-registration-withlogin']}}"
{% endif %}
{% if conf['egov-user']['citizen-otp-fixed'] %}
        - name: CITIZEN_LOGIN_PASSWORD_OTP_FIXED_VALUE
          value: "{{conf['egov-user']['citizen-otp-fixed']}}"
{% endif %}
{% if conf['egov-user']['citizen-otp-fixed-enabled'] %}
        - name: CITIZEN_LOGIN_PASSWORD_OTP_FIXED_ENABLED
          value: "{{conf['egov-user']['citizen-otp-fixed-enabled']}}"
{% endif %}
        - name: JAVA_OPTS
          value: "{{conf['egov-user']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: JAVA_ARGS
          value: "{{conf['egov-user']['java-args']}}"          
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
{% if conf['egov-config']['mobile-validation-workaround'] %}
        - name: MOBILE_NUMBER_VALIDATION_WORKAROUND_ENABLED
          value: "true"
{% endif %}
        - name: JAEGER_SERVICE_NAME
          value: egov-user
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"              
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false" 
{% if conf['egov-user']['tracing-enabled']%}          
        - name: TRACER_OPENTRACING_ENABLED
          value: "true" 
{% endif %}                   
{% if conf['egov-user']['memory_limits'] %}
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['egov-user']['memory_limits'] or "512Mi"}}"
{% endif %}
      volumes:
      - name: env-specific-db-migration
        emptyDir: {}
{% if conf['egov-docker-registry-secret'] %}
      imagePullSecrets:
      - name: regsecret
      - name: allvyregsecret
{% endif %}
