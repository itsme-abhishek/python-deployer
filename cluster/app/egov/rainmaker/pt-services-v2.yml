apiVersion: v1
kind: Service
metadata:
  name: pt-services-v2
  namespace: egov
  labels:
    app: pt-services-v2
    group: rainmaker
  annotations:
    prometheus.io/path: /pt-services-v2/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: pt-services-v2
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pt-services-v2
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['pt-services-v2']['replicas']}}
  template:
    metadata:
      labels:
        app: pt-services-v2
        group: rainmaker
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "pt-services-v2-db-migration",
            "image": "{{conf["pt-services-v2"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "pt_services_v2_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: pt-services-v2
        image: {{conf['pt-services-v2']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pt-services-v2/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /pt-services-v2/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"                
        - name: FLYWAY_ENABLED
          value: "false"
        - name: EGOV_IDGEN_HOST
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_USER_HOST
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_LOCATION_HOST
          value: "{{conf['egov-service-host']['egov-location']}}"
        - name: EGOV_LOCALIZATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"
        - name: EGOV_CALCULATION_HOST
          value: "{{conf['egov-service-host']['pt-calculator-v2']}}"
{% if conf['egov-config']['tracer-errors-provideexceptionindetails'] %}
        - name: TRACER_ERRORS_PROVIDEEXCEPTIONINDETAILS
          value: "{{conf['egov-config']['tracer-errors-provideexceptionindetails']}}"
{% endif %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: egov-pt-services-v2
        - name: PERSISTER_SAVE_PROPERTY_TOPIC
          value: save-pt-property
        - name: PERSISTER_UPDATE_PROPERTY_TOPIC
          value: update-pt-property
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['pt-services-v2']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: JAVA_ARGS
          value: "{{conf['pt-services-v2']['java-args']}}"          
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: EGOV_IDGEN_PTID_FORMAT
          value: "PT-[city]-[SEQ_EG_PT_PTID]"
        - name: EGOV_IDGEN_ASSM_FORMAT
          value: "AS-[cy:YYYY-MM-dd]-[SEQ_EG_PT_ASSM]"
        - name: NOTIFICATION_URL
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}citizen/property-tax"
        - name: JAEGER_SERVICE_NAME
          value: pt-services-v2
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"         
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false" 
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{ conf['rainmaker-pgr']['memory_limits'] or "512Mi"}}"
