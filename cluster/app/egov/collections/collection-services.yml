apiVersion: v1
kind: Service
metadata:
  name: collection-services
  namespace: egov
  labels:
    app: collection-services
    group: collections
  annotations:
    prometheus.io/path: /collection-services/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: collection-services
    group: collections
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: collection-services
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['collection-services']['replicas']}}
  template:
    metadata:
      labels:
        app: collection-services
        group: collections
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "collection-services-db-migration",
            "image": "{{conf["collection-services"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "egov_collection_services_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: collection-services
        image: {{conf['collection-services']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /collection-services/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /collection-services/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"                
        - name: FLYWAY_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: JAVA_OPTS
          value: "{{conf['collection-services']['heap'] or '-Xmx256m -Xms256m'}}"
        - name: JAVA_ARGS
          value: "{{conf['collection-services']['java-args']}}"
        - name: JAVA_ENABLE_DEBUG
          value: "{{conf['collection-services']['java-debug']}}"         
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: EGOV_SERVICES_WORKFLOW_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-workflows']}}"
        - name: KAFKA_TOPICS_RECEIPT_CREATE_NAME
          value: egov.collection.receipt-create
        - name: KAFKA_TOPICS_WORKFLOW_START_NAME
          value: egov.collection.workflow-start
        - name: KAFKA_TOPICS_WORKFLOW_START_KEY
          value: workflow-start
        - name: KAFKA_TOPICS_WORKFLOW_UPDATE_NAME
          value: egov.collection.workflow-update
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.collection.consumer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: collection-persist
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: USER_SERVICE_HOST
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_EGFCOMMONMASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_EGFMASTERS_HOSTNAME
          value: "{{conf['egov-service-host']['egf-master']}}"
        - name: EGOV_STATUSCODE_HOSTNAME
          value: "{{conf['egov-service-host']['collection-masters']}}"
        - name: EGOV_IDGEN_HOSTNAME
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_HREMPLOYEE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: EGOV_INSTRUMENT_HOSTNAME
          value: "{{conf['egov-service-host']['egf-instrument']}}"
        - name: EGOV_COMMON_SERVICE_HOST
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_EGFMASTER_SERVICE_HOST
          value: "{{conf['egov-service-host']['egf-master']}}"
        - name: EGOV_SERVICES_BILLING_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['billing-service']}}"
        - name: RECEIPTNUMBER_SERVICEBASED
          value: "{{conf['collection-services']['receiptnumber-servicebased']}}"
        - name: JAEGER_SERVICE_NAME
          value: collection-services
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"               
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false"                
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "{{ conf['collection-services']['memory_limits'] or "512Mi"}}"
