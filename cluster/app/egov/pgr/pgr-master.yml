apiVersion: v1
kind: Service
metadata:
  name: pgr-master
  namespace: egov
  labels:
    app: pgr-master
    group: pgr
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: pgr-master
    group: pgr
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pgr-master
  namespace: egov
spec:
  replicas: {{conf['pgr-master']['replicas']}}
  template:
    metadata:
      labels:
        app: pgr-master
        group: pgr
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "pgr-master-db-migration",
            "image": "{{conf["pgr-master"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "pgr_rest_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: pgr-master
        image: {{conf['pgr-master']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: SERVER_PORT
          value: "8080"
        - name: EGOV_SERVICES_EIS_HOST
          value: "{{conf['egov-service-host']['egov-eis']}}"
        - name: OUTGOING_QUEUE_NAME
          value: egov.pgr.validated
        - name: KAFKA_TOPICS_PGR_WORKFLOWUPDATED_NAME
          value: egov.pgr.workflowupdated
        - name: ES_CLUSTER_NAME
          value: egov_es_cluster
        - name: ES_HOST
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: es-host
        - name: ES_TRANSPORT_PORT
          value: "9300"
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: KAFKA_CONFIG_BOOTSTRAP_SERVER_CONFIG
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: KAFKA_TOPICS_SERVICEGROUP_CREATE_NAME
          value: egov.pgr.servicegroup-create
        - name: KAFKA_TOPICS_ROUTER_CREATE_NAME
          value: egov.pgr.router-create
        - name: KAFKA_TOPICS_SERVICEGROUP_UPDATE_NAME
          value: egov.pgr.servicegroup-update
        - name: KAFKA_TOPICS_RECEIVINGCENTER_CREATE_NAME
          value: egov.pgr.receiving-centertype-create
        - name: KAFKA_TOPICS_RECEIVINGCENTER_UPDATE_NAME
          value: egov.pgr.receiving-centertype-update
        - name: KAFKA_TOPICS_RECEIVINGMODE_CREATE_NAME
          value: egov.pgr.receiving-modetype-create
        - name: KAFKA_TOPICS_RECEIVINGMODE_UPDATE_NAME
          value: egov.pgr.receiving-modetype-update
        - name: KAFKA_TOPICS_PGR_WORKFLOWUPDATED_NAME
          value: egov.pgr.workflowupdated
        - name: KAFKA_TOPICS_SERVICETYPE_CREATE_NAME
          value: egov.pgr.servicetype-createe
        - name: KAFKA_TOPICS_SERVICETYPE_UPDATE_NAME
          value: egov.pgr.servicetype-update
        - name: KAFKA_TOPICS_ESCALATIONTIMETYPE_CREATE_NAME
          value: egov.pgr.escalationtype-create
        - name: KAFKA_TOPICS_ESCALATIONTIMETYPE_UPDATE_NAME
          value: egov.pgr.escalationtype-update
        - name: KAFKA_TOPICS_OTPCONFIG_CREATE_NAME
          value: egov.pgr.otpconfig-create
        - name: KAFKA_TOPICS_OTPCONFIG_UPDATE_NAME
          value: egov.pgr.otpconfig-update
        - name: KAFKA_CONSUMER_CONFIG_GROUP_ID
          value: pgr-persist
        - name: CRN_SERVICE_URL
          value: http://pgr-crn-generation:8080/crn-generation/crn
        - name: USER_SERVICE_URL
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: KAFKA_TOPICS_SERVICEDEFINITION_CREATE_KEY
          value: servicedefinition-create
        - name: JAVA_OPTS
          value: "{{conf['pgr-master']['heap'] or '-Xmx64m -Xms64m'}}"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['pgr-master']['memory_limits'] or "256Mi"}}"
