apiVersion: v1
kind: Service
metadata:
  name: hr-masters-v2
  namespace: egov
  labels:
    app: hr-masters-v2
    group: hr-2.0
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: hr-masters-v2
    group: hr-2.0
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hr-masters-v2
  namespace: egov
spec:
  replicas: {{conf['hr-masters-v2']['replicas']}}
  template:
    metadata:
      labels:
        app: hr-masters-v2
        group: hr-2.0
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "hr-masters-v2-db-migration",
            "image": "{{conf["hr-masters-v2"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "value": "{{ conf['hr-masters-v2']['db-url']}}"},
              {"name": "SCHEMA_TABLE", "value": "hr_masters_v2_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}},
              {"name": "IGNOREMISSINGMIGRATIONS", "value": "true"}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: hr-masters-v2
        image: {{conf['hr-masters-v2']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: "{{ conf['hr-masters-v2']['db-url']}}"
          # valueFrom:
          #   configMapKeyRef:
          #     name: egov-config
          #     key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: EGOV_SERVICES_HR_EMPLOYEE_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-employee-v2']}}"
        - name: EGOV_SERVICES_EGOV_COMMON_MASTERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name:  EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: JAVA_OPTS
          value: "{{conf['hr-masters-v2']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: KAFKA_TOPICS_DESIGNATION_CREATE_NAME
          value: egov.designation-create-v2
        - name: KAFKA_TOPICS_DESIGNATION_UPDATE_NAME
          value: egov.designation-update-v2
        - name: KAFKA_TOPICS_POSITION_DB_PERSIST_NAME
          value: egov.position-db_persist-v2
        - name: KAFKA_TOPICS_POSITION_CREATE_NAME
          value: egov.position-create-v2
        - name: KAFKA_TOPICS_POSITION_UPDATE_NAME
          value: egov.position-update-v2
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
{% if conf['hr-masters-v2']['data_sync_position_required'] %}
        - name: EGOV_SERVICES_DATA_SYNC_POSITION_REQUIRED
          value: "true"
{% endif %}
{% if conf['hr-masters-v2']['memory_limits'] %}
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{conf['hr-masters-v2']['memory_limits'] or "512Mi"}}"
{% endif %}
      volumes:
      - name: env-specific-db-migration
        emptyDir: {}
{% if conf['egov-docker-registry-secret'] %}
      imagePullSecrets:
      - name: regsecret
      - name: allvyregsecret
{% endif %}