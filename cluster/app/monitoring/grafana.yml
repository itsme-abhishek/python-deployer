---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  type: "{{conf['grafana']['service_type']}}"
  ports:
    - name: grafana
      port: 3000
      protocol: TCP
      targetPort: 3000
{% if conf['grafana']['service_type'] == 'NodePort' %}
    nodePort: {{ conf['grafana']['service_port'] }}
{% endif %}
  selector:
    app: grafana
    component: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      containers:
      - image: {{conf['grafana']['images'][0]}}
        name: grafana
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        - name: grafana-data
          mountPath: /data
      volumes:
      - name: grafana-data
        emptyDir: {}
